import pandas as pd
import numpy as np

def calculate_z_depths_and_find_min(file_path):
    
    df = pd.read_csv(file_path)

    # Define a tolerance
    tolerance = 0.01

    # Collect the points where T is close to 11.75 and T is close to 100.
    df_11_75 = df[df['Temperature'].between(11.75 - tolerance, 11.75 + tolerance)][['x', 'z']]
    df_100 = df[df['Temperature'].between(100 - tolerance, 100 + tolerance)][['x', 'z']]

    # Merge the two dataframes on the x coordinate to pair up points.
    merged_df = pd.merge(df_11_75, df_100, on='x', suffixes=('_11_75', '_100'))

    # Calculate the z depth between the paired points and store it.
    merged_df['z_depth'] = np.abs(merged_df['z_100'] - merged_df['z_11_75'])

    # Find the minimum z depth.
    min_z_depth = merged_df['z_depth'].min()

    # Find the row with the minimum z depth to get the corresponding coordinates.
    row_at_min_depth = merged_df.loc[merged_df['z_depth'].idxmin()]

    print(f"Minimum z depth for a fixed x-coordinate: {min_z_depth}")
    print(f"This minimum occurs at x = {row_at_min_depth['x']}")
    print(f"The corresponding z values are: z_11.75 = {row_at_min_depth['z_11_75']} and z_100 = {row_at_min_depth['z_100']}")

# Call the function with your file name.
calculate_z_depths_and_find_min('FinalTempsBaseRho_40IncHr_DATA.csv')
